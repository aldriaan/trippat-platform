version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: trippat-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: trippat
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - trippat-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: trippat-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/trippat?authSource=admin
      JWT_SECRET: ${JWT_SECRET}
      PORT: 5000
      FRONTEND_URL: http://localhost:3000
      ADMIN_URL: http://localhost:3001
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
      EMAIL_FROM: ${EMAIL_FROM}
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      - mongodb
    networks:
      - trippat-network

  # Admin Dashboard
  admin:
    build:
      context: ./trippat-admin
      dockerfile: Dockerfile
    container_name: trippat-admin
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      PORT: 3001
      NEXT_PUBLIC_API_URL: http://localhost:5000/api
    depends_on:
      - backend
    networks:
      - trippat-network

  # Customer App
  customer:
    build:
      context: ./trippat-customer
      dockerfile: Dockerfile
    container_name: trippat-customer
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      NEXT_PUBLIC_API_URL: http://localhost:5000/api
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    depends_on:
      - backend
    networks:
      - trippat-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: trippat-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - admin
      - customer
    networks:
      - trippat-network

volumes:
  mongodb_data:

networks:
  trippat-network:
    driver: bridge